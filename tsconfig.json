{
  "compileOnSave": false,
  "compilerOptions": {
    "newLine": "lf",
    /** 给源码里的装饰器声明加上设计类型元数据 */
    "emitDecoratorMetadata": true,
    /** 启用实验性的ES装饰器 */
    "experimentalDecorators": true,
    /** 指定生成哪个模块系统代码： "None"， "CommonJS"， "AMD"， "System"， "UMD"， "ES6"或 "ES2015" */
    "module": "commonjs",
    /** 指定ECMAScript目标版本 "ES3"（默认）， "ES5"， "ES6"/ "ES2015"， "ES2016"， "ES2017"或 "ESNext" */
    "target": "es6",
    "lib": [
      "es2015",
      "es2017",
      "esnext",
      "dom"
    ],
    /** 生成 sourceMap */
    "sourceMap": true,
    /** 允许编译javascript文件 */
    "allowJs": true,
    /** 不生成输出文件 */
    "noEmit": true,
    /** 显示编译信息 */
    "diagnostics": false,
    /** 使用颜色和上下文 */
    "pretty": true,
    /** 在 .tsx文件里支持JSX */
    "jsx": "react",
    "rootDir": ".",
    /** paths */
    "baseUrl": ".",
    /** 决定如何处理模块 */
    "moduleResolution": "node",
    /** 详细信息输出 */
    "traceResolution": false,
    /** 禁止对同一个文件的不一致的引用。 */
    "forceConsistentCasingInFileNames": true,
    /** 不是函数的所有返回路径都有返回值时报错。 */
    "noImplicitReturns": true,
    /** 当 this表达式的值为 any类型的时候，生成一个错误。 */
    "noImplicitThis": true,
    /** 在表达式和声明上有隐含的 any类型时报错。 */
    "noImplicitAny": false,
    /** 启用所有严格类型检查选项 */
    "strict": false,
    /** null和 undefined */
    "strictNullChecks": true,
    /** about noImplicitAny */
    "suppressImplicitAnyIndexErrors": true,
    /** 若有未使用的局部变量则抛错 */
    "noUnusedLocals": false,
    /** 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。 */
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    // /** 自动创建类型声明文件 [name.d.ts] */
    // "declaration": false,
    // /** 类型声明文件的输出目录 */
    // "declarationDir": "./d.typings",
    /** 指定引入的类型声明文件，默认是自动引入所有声明文件，一旦指定该选项，则会禁用自动引入，改为只引入指定的类型声明文件，如果指定空数组[]则不引用任何文件 */
    /** 自动引入全局类型生命，如 node */
    "skipDefaultLibCheck": true,
    "skipLibCheck": true,
    "typeRoots": [
      "node_modules/@types",
      "typings"
    ],
    "noFallthroughCasesInSwitch": true,
    "resolveJsonModule": true, 
    "types": [
      "node"
    ],
    "paths": {
      "~/*": [
        "./*"
      ],
      "@/*": [
        "src/*"
      ]
    }
  },
  "include": [
    "src",
    "typings"
  ],
  "exclude": [
    "node_modules"
  ]
}
